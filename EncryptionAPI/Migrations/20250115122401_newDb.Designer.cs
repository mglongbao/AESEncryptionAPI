// <auto-generated />
using EncryptionAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EncryptionAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250115122401_newDb")]
    partial class newDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("EncryptionAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EncryptedData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EncryptionAPI.Models.UserKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EncryptedKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IV")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserKeys");
                });

            modelBuilder.Entity("EncryptionAPI.Models.UserKey", b =>
                {
                    b.HasOne("EncryptionAPI.Models.User", "User")
                        .WithOne("Key")
                        .HasForeignKey("EncryptionAPI.Models.UserKey", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EncryptionAPI.Models.User", b =>
                {
                    b.Navigation("Key")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
